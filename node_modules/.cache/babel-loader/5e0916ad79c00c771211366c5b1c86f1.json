{"ast":null,"code":"var _jsxFileName = \"/Users/azizgeidar/Desktop/dev/mesto-react/src/components/App.js\",\n    _s2 = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport AvatarPopup from \"./AvatarPopup\";\nimport ProfilePopup from \"./ProfilePopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport PopupConfirmation from \"./PopupConfirmation\";\nimport ImagePopup from \"./ImagePopup\";\nimport { DEFAULT_CARD } from \"../utils/constants\";\nimport { api } from \"../utils/Api\"; // import loader from \"../images/loader.svg\";\n\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\n  const [isConfirmationPopupOpen, setConfirmationPopupOpen] = useState(false);\n  const [isImagePopupOpen, setImagePopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(DEFAULT_CARD);\n  const [currentUser, setCurrentUser] = useState(\"Загрузка...\");\n  const [cards, setCards] = useState([]);\n  useEffect(() => {\n    Promise.all([api.getUserInformation(), api.getInitialCards()]).then(_ref => {\n      let [userData, initialCards] = _ref;\n      setCurrentUser(userData);\n      setCards(initialCards);\n      localStorage.setItem(\"userId\", userData._id);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n\n  function handleCardLike(card) {\n    _s();\n\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id); // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    useEffect(() => {\n      api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n        setCards(state => state.map(c => c._id === card._id ? newCard : c));\n      });\n    });\n  }\n\n  _s(handleCardLike, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n    setImagePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setEditAvatarPopupOpen(true);\n  }\n\n  function closeAllPopups() {\n    setEditAvatarPopupOpen(false);\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setConfirmationPopupOpen(false);\n    setImagePopupOpen(false);\n    setSelectedCard(DEFAULT_CARD);\n  }\n\n  function handleEditProfileClick() {\n    setEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setAddPlacePopupOpen(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Main, {\n          onEditAvatar: handleEditAvatarClick,\n          onEditProfile: handleEditProfileClick,\n          onAddPlace: handleAddPlaceClick,\n          onHandleCardClick: handleCardClick,\n          cards: cards,\n          onCardLike: handleCardLike\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n          onClose: closeAllPopups,\n          card: selectedCard,\n          isOpen: isImagePopupOpen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PopupConfirmation, {\n          isOpen: isConfirmationPopupOpen,\n          onClose: closeAllPopups\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n          isOpen: isAddPlacePopupOpen,\n          onClose: closeAllPopups\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProfilePopup, {\n          isOpen: isEditProfilePopupOpen,\n          onClose: closeAllPopups\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AvatarPopup, {\n          isOpen: isEditAvatarPopupOpen,\n          onClose: closeAllPopups\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(App, \"/ufCKKfq1N+5RtMFZvnsy6S+Zzg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Header","Main","Footer","AvatarPopup","ProfilePopup","AddPlacePopup","PopupConfirmation","ImagePopup","DEFAULT_CARD","api","CurrentUserContext","App","isEditAvatarPopupOpen","setEditAvatarPopupOpen","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","isConfirmationPopupOpen","setConfirmationPopupOpen","isImagePopupOpen","setImagePopupOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","cards","setCards","Promise","all","getUserInformation","getInitialCards","then","userData","initialCards","localStorage","setItem","_id","catch","error","console","log","handleCardLike","card","isLiked","likes","some","i","changeLikeCardStatus","newCard","state","map","c","handleCardClick","handleEditAvatarClick","closeAllPopups","handleEditProfileClick","handleAddPlaceClick"],"sources":["/Users/azizgeidar/Desktop/dev/mesto-react/src/components/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport AvatarPopup from \"./AvatarPopup\";\nimport ProfilePopup from \"./ProfilePopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport PopupConfirmation from \"./PopupConfirmation\";\nimport ImagePopup from \"./ImagePopup\";\nimport { DEFAULT_CARD } from \"../utils/constants\";\nimport { api } from \"../utils/Api\";\n// import loader from \"../images/loader.svg\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\nfunction App() {\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\n  const [isConfirmationPopupOpen, setConfirmationPopupOpen] = useState(false);\n  const [isImagePopupOpen, setImagePopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(DEFAULT_CARD);\n  const [currentUser, setCurrentUser] = useState(\"Загрузка...\");\n  const [cards, setCards] = useState([]);\n\n  useEffect(() => {\n    Promise.all([api.getUserInformation(), api.getInitialCards()])\n      .then(([userData, initialCards]) => {\n        setCurrentUser(userData);\n        setCards(initialCards);\n        localStorage.setItem(\"userId\", userData._id);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    useEffect(() => {\n      api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n        setCards((state) =>\n          state.map((c) => (c._id === card._id ? newCard : c))\n        );\n      });\n    });\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n    setImagePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setEditAvatarPopupOpen(true);\n  }\n\n  function closeAllPopups() {\n    setEditAvatarPopupOpen(false);\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setConfirmationPopupOpen(false);\n    setImagePopupOpen(false);\n    setSelectedCard(DEFAULT_CARD);\n  }\n\n  function handleEditProfileClick() {\n    setEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setAddPlacePopupOpen(true);\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"body\">\n        <div className=\"page\">\n          <Header />\n          <Main\n            onEditAvatar={handleEditAvatarClick}\n            onEditProfile={handleEditProfileClick}\n            onAddPlace={handleAddPlaceClick}\n            onHandleCardClick={handleCardClick}\n            cards={cards}\n            onCardLike={handleCardLike}\n          />\n          <Footer />\n          <ImagePopup\n            onClose={closeAllPopups}\n            card={selectedCard}\n            isOpen={isImagePopupOpen}\n          />\n\n          <PopupConfirmation\n            isOpen={isConfirmationPopupOpen}\n            onClose={closeAllPopups}\n          />\n          <AddPlacePopup\n            isOpen={isAddPlacePopupOpen}\n            onClose={closeAllPopups}\n          />\n          <ProfilePopup\n            isOpen={isEditProfilePopupOpen}\n            onClose={closeAllPopups}\n          />\n          <AvatarPopup\n            isOpen={isEditAvatarPopupOpen}\n            onClose={closeAllPopups}\n          />\n        </div>\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}