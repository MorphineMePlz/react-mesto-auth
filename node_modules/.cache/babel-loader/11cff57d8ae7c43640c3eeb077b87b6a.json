{"ast":null,"code":"import { USER_TOKEN, BASE_URL } from \"./constants\";\n\nclass Api {\n  constructor(setting) {\n    this._address = setting.baseUrl;\n    this._headers = setting.headers;\n  }\n\n  handelResponse(res) {\n    if (!res.ok) {\n      return Promise.reject(`Ошибка: ${res.status} - ${res.statusText}`);\n    }\n\n    return res.json();\n  }\n\n  getUserInformation() {\n    return fetch(`${this._address}/users/me`, {\n      method: \"GET\",\n      headers: this._headers\n    }).then(res => this.handelResponse(res));\n  }\n\n  getInitialCards() {\n    return fetch(`${this._address}/cards`, {\n      method: \"GET\",\n      headers: this._headers\n    }).then(res => this.handelResponse(res));\n  }\n\n  editUserInformation(_ref) {\n    let {\n      about,\n      name\n    } = _ref;\n    return fetch(`${this._address}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        about: about\n      })\n    }).then(res => this.handelResponse(res));\n  }\n\n  addNewCard(_ref2) {\n    let {\n      name,\n      link\n    } = _ref2;\n    return fetch(`${this._address}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        link\n      })\n    }).then(res => this.handelResponse(res));\n  }\n\n  deleteOwnCard(id) {\n    return fetch(`${this._address}/cards/${id}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(res => this.handelResponse(res));\n  }\n\n  likeCard(id) {\n    return fetch(`${this._address}/cards/${id}/likes`, {\n      method: \"PUT\",\n      headers: this._headers\n    }).then(res => this.handelResponse(res));\n  }\n\n  removeCardLike(id) {\n    return fetch(`${this._address}/cards/${id}/likes`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(res => this.handelResponse(res));\n  }\n\n  changeLikeCardStatus(cardId, isNotLiked) {\n    return fetch(`${this._address}/cards/${cardId}/likes`, {\n      method: isNotLiked ? \"PUT\" : \"DELETE\",\n      headers: this._headers\n    }).then(res => this.handelResponse(res));\n  }\n\n  changeAvatar(data) {\n    return fetch(`${this._address}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    }).then(res => this.handelResponse(res));\n  }\n\n}\n\nexport const api = new Api({\n  baseUrl: BASE_URL,\n  headers: {\n    Authorization: USER_TOKEN,\n    \"Content-Type\": \"application/json\"\n  }\n});","map":{"version":3,"names":["USER_TOKEN","BASE_URL","Api","constructor","setting","_address","baseUrl","_headers","headers","handelResponse","res","ok","Promise","reject","status","statusText","json","getUserInformation","fetch","method","then","getInitialCards","editUserInformation","about","name","body","JSON","stringify","addNewCard","link","deleteOwnCard","id","likeCard","removeCardLike","changeLikeCardStatus","cardId","isNotLiked","changeAvatar","data","avatar","api","Authorization"],"sources":["/Users/azizgeidar/Desktop/dev/react-mesto-auth/src/utils/Api.js"],"sourcesContent":["import { USER_TOKEN, BASE_URL } from \"./constants\";\n\nclass Api {\n  constructor(setting) {\n    this._address = setting.baseUrl;\n    this._headers = setting.headers;\n  }\n\n  handelResponse(res) {\n    if (!res.ok) {\n      return Promise.reject(`Ошибка: ${res.status} - ${res.statusText}`);\n    }\n    return res.json();\n  }\n\n  getUserInformation() {\n    return fetch(`${this._address}/users/me`, {\n      method: \"GET\",\n      headers: this._headers,\n    }).then((res) => this.handelResponse(res));\n  }\n\n  getInitialCards() {\n    return fetch(`${this._address}/cards`, {\n      method: \"GET\",\n      headers: this._headers,\n    }).then((res) => this.handelResponse(res));\n  }\n\n  editUserInformation({ about, name }) {\n    return fetch(`${this._address}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        about: about,\n      }),\n    }).then((res) => this.handelResponse(res));\n  }\n\n  addNewCard({ name, link }) {\n    return fetch(`${this._address}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        link,\n      }),\n    }).then((res) => this.handelResponse(res));\n  }\n\n  deleteOwnCard(id) {\n    return fetch(`${this._address}/cards/${id}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    }).then((res) => this.handelResponse(res));\n  }\n\n  likeCard(id) {\n    return fetch(`${this._address}/cards/${id}/likes`, {\n      method: \"PUT\",\n      headers: this._headers,\n    }).then((res) => this.handelResponse(res));\n  }\n\n  removeCardLike(id) {\n    return fetch(`${this._address}/cards/${id}/likes`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    }).then((res) => this.handelResponse(res));\n  }\n\n  changeLikeCardStatus(cardId, isNotLiked) {\n    return fetch(`${this._address}/cards/${cardId}/likes`, {\n      method: isNotLiked ? \"PUT\" : \"DELETE\",\n      headers: this._headers,\n    }).then((res) => this.handelResponse(res));\n  }\n\n  changeAvatar(data) {\n    return fetch(`${this._address}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar,\n      }),\n    }).then((res) => this.handelResponse(res));\n  }\n}\n\nexport const api = new Api({\n  baseUrl: BASE_URL,\n  headers: {\n    Authorization: USER_TOKEN,\n    \"Content-Type\": \"application/json\",\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}