{"ast":null,"code":"import { USER_TOKEN, BASE_URL } from \"./constants\";\n\nclass Api {\n  constructor(setting) {\n    this._address = setting.baseUrl;\n    this._headers = setting.headers;\n  }\n\n  handelResponse(res) {\n    if (!res.ok) {\n      return Promise.reject(`Ошибка: ${res.status} - ${res.statusText}`);\n    }\n\n    return res.json();\n  }\n\n  getUserInformation() {\n    return fetch(`${this._address}/users/me`, {\n      method: \"GET\",\n      headers: this._headers\n    }).then(res => this.handelResponse(res));\n  }\n\n  getInitialCards() {\n    return fetch(`${this._address}/cards`, {\n      method: \"GET\",\n      headers: this._headers\n    }).then(res => this.handelResponse(res));\n  }\n\n  editUserInformation(_ref) {\n    let {\n      job,\n      name\n    } = _ref;\n    return fetch(`${this._address}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        about: job\n      })\n    }).then(res => this.handelResponse(res));\n  }\n\n  addNewCard(_ref2) {\n    let {\n      place,\n      link\n    } = _ref2;\n    return fetch(`${this._address}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: place,\n        link\n      })\n    }).then(res => this.handelResponse(res));\n  }\n\n  deleteOwnCard(id) {\n    return fetch(`${this._address}/cards/${id}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(res => this.handelResponse(res));\n  }\n\n  likeCard(id) {\n    return fetch(`${this._address}/cards/${id}/likes`, {\n      method: \"PUT\",\n      headers: this._headers\n    }).then(res => this.handelResponse(res));\n  }\n\n  removeCardLike(id) {\n    return fetch(`${this._address}/cards/${id}/likes`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(res => this.handelResponse(res));\n  }\n\n  changeLikeCardStatus(cardId, isNotLiked) {\n    return fetch(`${this._BASE_URL}/cards/likes/${cardId}`, {\n      method: isNotLiked ? \"PUT\" : \"DELETE\",\n      headers: this._headers\n    }).then(res => this.handelResponse(res));\n  }\n\n  changeAvatar(avatar) {\n    return fetch(`${this._address}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar\n      })\n    }).then(res => this.handelResponse(res));\n  }\n\n}\n\nexport const api = new Api({\n  baseUrl: BASE_URL,\n  headers: {\n    Authorization: USER_TOKEN,\n    \"Content-Type\": \"application/json\"\n  }\n});","map":{"version":3,"names":["USER_TOKEN","BASE_URL","Api","constructor","setting","_address","baseUrl","_headers","headers","handelResponse","res","ok","Promise","reject","status","statusText","json","getUserInformation","fetch","method","then","getInitialCards","editUserInformation","job","name","body","JSON","stringify","about","addNewCard","place","link","deleteOwnCard","id","likeCard","removeCardLike","changeLikeCardStatus","cardId","isNotLiked","_BASE_URL","changeAvatar","avatar","api","Authorization"],"sources":["/Users/azizgeidar/Desktop/dev/mesto-react/src/utils/Api.js"],"sourcesContent":["import { USER_TOKEN, BASE_URL } from \"./constants\";\n\nclass Api {\n  constructor(setting) {\n    this._address = setting.baseUrl;\n    this._headers = setting.headers;\n  }\n\n  handelResponse(res) {\n    if (!res.ok) {\n      return Promise.reject(`Ошибка: ${res.status} - ${res.statusText}`);\n    }\n    return res.json();\n  }\n\n  getUserInformation() {\n    return fetch(`${this._address}/users/me`, {\n      method: \"GET\",\n      headers: this._headers,\n    }).then((res) => this.handelResponse(res));\n  }\n\n  getInitialCards() {\n    return fetch(`${this._address}/cards`, {\n      method: \"GET\",\n      headers: this._headers,\n    }).then((res) => this.handelResponse(res));\n  }\n\n  editUserInformation({ job, name }) {\n    return fetch(`${this._address}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        about: job,\n      }),\n    }).then((res) => this.handelResponse(res));\n  }\n\n  addNewCard({ place, link }) {\n    return fetch(`${this._address}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: place,\n        link,\n      }),\n    }).then((res) => this.handelResponse(res));\n  }\n\n  deleteOwnCard(id) {\n    return fetch(`${this._address}/cards/${id}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    }).then((res) => this.handelResponse(res));\n  }\n\n  likeCard(id) {\n    return fetch(`${this._address}/cards/${id}/likes`, {\n      method: \"PUT\",\n      headers: this._headers,\n    }).then((res) => this.handelResponse(res));\n  }\n\n  removeCardLike(id) {\n    return fetch(`${this._address}/cards/${id}/likes`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    }).then((res) => this.handelResponse(res));\n  }\n\n  changeLikeCardStatus(cardId, isNotLiked) {\n    return fetch(`${this._BASE_URL}/cards/likes/${cardId}`, {\n      method: isNotLiked ? \"PUT\" : \"DELETE\",\n      headers: this._headers,\n    }).then((res) => this.handelResponse(res));\n  }\n\n  changeAvatar(avatar) {\n    return fetch(`${this._address}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar,\n      }),\n    }).then((res) => this.handelResponse(res));\n  }\n}\n\nexport const api = new Api({\n  baseUrl: BASE_URL,\n  headers: {\n    Authorization: USER_TOKEN,\n    \"Content-Type\": \"application/json\",\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}